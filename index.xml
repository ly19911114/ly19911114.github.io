<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Welcome to the mysterious world</title>
    <link>https://ly19911114.github.io/</link>
    <description>Recent content on Welcome to the mysterious world</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Dec 2019 16:28:13 +0800</lastBuildDate>
    
	<atom:link href="https://ly19911114.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Springboot项目规范总结</title>
      <link>https://ly19911114.github.io/post/springboot%E9%A1%B9%E7%9B%AE%E8%A7%84%E8%8C%83%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 22 Dec 2019 16:28:13 +0800</pubDate>
      
      <guid>https://ly19911114.github.io/post/springboot%E9%A1%B9%E7%9B%AE%E8%A7%84%E8%8C%83%E6%80%BB%E7%BB%93/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://ly19911114.github.io/post/shiro%E6%9D%83%E9%99%90%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ly19911114.github.io/post/shiro%E6%9D%83%E9%99%90%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B/</guid>
      <description>title: &amp;ldquo;shiro权限框架与SpringBoot的整合&amp;rdquo; date: 2019-12-22T16:28:13+08:00 draft: true
近期在学习shiro的权限框架，整理资料如下：包括基本概念，单元测试，SpringBoot整合shiro框架的实操，最后是上线项目的整合
第1章 Shiro权限实战课程介绍 第1集 Shiro权限实战课程介绍 简介：讲解为什么要学这门课，Shiro权限框架的课程大纲和学后水平
 公司新项目需要用到、要么就是需要接收别人的代码、个人技术栈的成长 Springboot2.x/SpringMVC + Maven + jdk8 + IDEA/Eclipse
 学后水平：掌握Shiro在公司中实际的使用，包括明白里面的核心原理
  第2集 权限控制和初学JavaWeb处理访问权限控制 简介：讲解什么是权限控制，初学JavaWeb时处理流程
 什么是权限控制：  忽略特别细的概念，比如权限能细分很多种，功能权限，数据权限，管理权限等 理解两个概念：用户和资源，让指定的用户，只能操作指定的资源（CRUD）  初学javaweb时怎么做
 Filter接口中有一个doFilter方法，自己编写好业务Filter，并配置对哪个web资源进行拦截后 如果访问的路径命中对应的Filter，则会执行doFilter()方法，然后判断是否有权限进行访问对应的资源 /api/user/info?id=1
public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws Exception { HttpServletRequest httpRequest=(HttpServletRequest)request; HttpServletResponse httpResponse=(HttpServletResponse)response; HttpSession session=httpRequest.getSession(); if(session.getAttribute(&amp;quot;username&amp;quot;)!=null){ chain.doFilter(request, response); } else { httpResponse.sendRedirect(httpRequest.getContextPath()+&amp;quot;/login.jsp&amp;quot;); } }    第2章 大话权限框架核心知识ACL和RBAC 第1集 权限框架设计之ACL和RBAC讲解 简介：介绍什么是ACL和RBAC</description>
    </item>
    
  </channel>
</rss>